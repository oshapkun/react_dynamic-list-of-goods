{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","getColorClass","color","_jsx","children","map","good","className","name","id","getAll","fetch","then","response","json","App","_useState","useState","_useState2","_slicedToArray","setGoods","_jsxs","type","onClick","goodsAPI","sort","a","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACrCC,EAAgB,SAACC,GACrB,OAAQA,GACN,IAAK,MACH,MAAO,YACT,IAAK,QACH,MAAO,cACT,IAAK,OACH,MAAO,aACT,QACE,MAAO,GAEb,EAEA,OACEC,cAAA,MAAAC,SACGJ,EAAMK,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,UAAWN,EAAcK,EAAKJ,OAAOE,SAEpCE,EAAKE,MAJDF,EAAKG,GAKP,KAIb,EC7BO,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACrC,CAEO,ICHMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvChB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GActB,OACEG,eAAA,OAAKd,UAAU,MAAKH,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEmB,KAAK,SACL,UAAQ,aACRC,QAnBe,WACnBC,IAAkBZ,KAAKQ,EACzB,EAiB4BhB,SACvB,mBAIDD,cAAA,UACEmB,KAAK,SACL,UAAQ,oBACRC,QAvBqB,WDHpBb,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EACZyB,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAElB,KACfoB,cAAcD,EAAEnB,KAAK,IAAEqB,MAAM,EAAG,EAAE,ICClBjB,KAAKQ,EAC5B,EAqBkChB,SAC7B,uBAIDD,cAAA,UACEmB,KAAK,SACL,UAAQ,aACRC,QA3Be,WDAdb,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EAAM8B,QAAO,SAAAxB,GAAI,MAAmB,QAAfA,EAAKJ,KAAe,GAAC,ICAlCU,KAAKQ,EAC9B,EAyB4BhB,SACvB,mBAIDD,cAACL,EAAS,CAACE,MAAOA,MAGxB,EClDA+B,IAASC,OACP7B,cAACY,EAAG,IACJkB,SAASC,eAAe,Q","file":"static/js/main.f83cd4ac.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  const getColorClass = (color: string) => {\n    switch (color) {\n      case 'red':\n        return 'color-red';\n      case 'green':\n        return 'color-green';\n      case 'blue':\n        return 'color-blue';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          data-cy=\"good\"\n          className={getColorClass(good.color)}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = (): Promise<Good[]> => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name\n        .localeCompare(b.name)).slice(0, 5));\n};\n\nexport const getRedGoods = (): Promise<Good[]> => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const loadAllGoods = () => {\n    goodsAPI.getAll().then(setGoods);\n  };\n\n  const loadFirstFiveGoods = () => {\n    goodsAPI.get5First().then(setGoods);\n  };\n\n  const loadRedGoods = () => {\n    goodsAPI.getRedGoods().then(setGoods);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={loadAllGoods}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={loadFirstFiveGoods}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={loadRedGoods}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}